# Run `kubectl apply -f matchmaking.yaml` to deploy these definitions.
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: triberraar-mm
  name: triberraar-mm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: agones-sdk-access
  namespace: default
  labels:
    app: agones
    chart: agones-1.9.0-dev
    release: agones-manual
    heritage: Helm
subjects:
  - kind: User
    name: system:serviceaccount:default:agones-sdk
    apiGroup: rbac.authorization.k8s.io
  - kind: User
    name: system:serviceaccount:default:default
    apiGroup: rbac.authorization.k8s.io
  - kind: User
    name: system:serviceaccount:triberraar-mm:default
    apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agones-sdk
---
apiVersion: v1
kind: Pod
metadata:
  name: go-battleship-director
  namespace: triberraar-mm
spec:
  containers:
    - name: go-battleship-director
      image: triberraar/go-battleship-director:latest
      imagePullPolicy: Always
      resources:
        requests:
          memory: '32Mi'
          cpu: '20m'
        limits:
          memory: '32Mi'
          cpu: '20m'
  hostname: go-battleship-director
---
apiVersion: v1
kind: Pod
metadata:
  name: go-battleship-matchmaking
  namespace: triberraar-mm
  labels:
    app: go-battleship
    component: matchmaking
spec:
  containers:
    - name: go-battleship-matchmaking
      image: triberraar/go-battleship-matchmaking:latest
      imagePullPolicy: Always
      ports:
        - name: grpc
          containerPort: 50502
      resources:
        requests:
          memory: '32Mi'
          cpu: '20m'
        limits:
          memory: '32Mi'
          cpu: '20m'
---
kind: Service
apiVersion: v1
metadata:
  name: go-battleship-matchmaking
  namespace: triberraar-mm
  labels:
    app: go-battleship
    component: matchmaking
spec:
  selector:
    app: go-battleship
    component: matchmaking
  clusterIP: None
  type: ClusterIP
  ports:
    - name: grpc
      protocol: TCP
      port: 50502
---
apiVersion: v1
kind: Pod
metadata:
  name: go-battleship-frontend
  namespace: triberraar-mm
  labels:
    app: go-battleship
    component: go-battleship-frontend
spec:
  containers:
    - name: go-battleship-frontend
      image: triberraar/go-battleship-frontend:latest
      imagePullPolicy: Always
      ports:
        - name: http
          containerPort: 10002
      resources:
        requests:
          memory: '32Mi'
          cpu: '20m'
        limits:
          memory: '32Mi'
          cpu: '20m'
---
kind: Service
apiVersion: v1
metadata:
  name: go-battleship-frontend
  namespace: triberraar-mm
  labels:
    app: go-battleship
    component: go-battleship-frontend
spec:
  selector:
    app: go-battleship
    component: go-battleship-frontend
  clusterIP: None
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 10002
---

